<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru" class="gr__kgeorgiy_info"><head><title>Разработка на платформе Java Generics (1)</title><meta name="author" content="$author" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="./static/slidy.css" /><link rel="stylesheet" type="text/css" href="./static/prettify.css" /><link rel="stylesheet" type="text/css" href="./static/kgeorgiy-slides.css" /><script type="text/javascript" async="" src="./static/watch.js.download" /><script type="text/javascript" src="./static/slidy.js.download" charset="utf-8" /><script type="text/javascript" src="./static/kgeorgiy-slides.js.download" charset="utf-8" /><script type="text/javascript" src="./static/prettify.js.download" /><script type="text/javascript" src="./static/lang-sql.js.download" /><style id="style-1-cropbar-clipper">/* Copyright 2014 Evernote Corporation. All rights reserved. */
.en-markup-crop-options {
    top: 18px !important;
    left: 50% !important;
    margin-left: -100px !important;
    width: 200px !important;
    border: 2px rgba(255,255,255,.38) solid !important;
    border-radius: 4px !important;
}

.en-markup-crop-options div div:first-of-type {
    margin-left: 0px !important;
}
</style></head><body onload="prettyPrint()" data-gr-c-s-loaded="true" style="visibility: visible;" class=" single_slide"><div class=" slidy_toc hidden"><div class=" toc-heading">Оглавление</div><ol><li><a href="index.xhtml#(1)">Разработка на платформе Java Generics(1)</a></li><li class=" section"><a href="index.xhtml#(2)">Полиморфизм</a></li><li><a href="index.xhtml#(3)">Полиморфизм</a></li><li><a href="index.xhtml#(4)">Пример полиморфизма (1)</a></li><li><a href="index.xhtml#(5)">Пример полиморфизма (2)</a></li><li><a href="index.xhtml#(6)">Пример полиморфизма (3)</a></li><li><a href="index.xhtml#(7)">Пример полиморфизма (4)</a></li><li><a href="index.xhtml#(8)">Пример полиморфизма (5)</a></li><li><a href="index.xhtml#(9)">Пример полиморфизма (6)</a></li><li class=" section"><a href="index.xhtml#(10)">Введение в Generics</a></li><li><a href="index.xhtml#(11)">Особенности Generics</a></li><li><a href="index.xhtml#(12)">Пример generic-определения</a></li><li><a href="index.xhtml#(13)">Generic стек</a></li><li><a href="index.xhtml#(14)">Пример реализация generic-класса </a></li><li><a href="index.xhtml#(15)">Несовместимость generic-типов</a></li><li class=" section"><a href="index.xhtml#(16)">Реализация Generic</a></li><li><a href="index.xhtml#(17)">Проблема 1</a></li><li><a href="index.xhtml#(18)">Решение 1 - wildcard</a></li><li><a href="index.xhtml#(19)">Проблема 2</a></li><li><a href="index.xhtml#(20)">Решение 2 – bounded wildcard</a></li><li><a href="index.xhtml#(21)">Проблема 3</a></li><li><a href="index.xhtml#(22)">Решение 3 – generic-метод</a></li><li><a href="index.xhtml#(23)">Проблема 4</a></li><li><a href="index.xhtml#(24)">Решение 4 – bounded type argument</a></li><li><a href="index.xhtml#(25)">Решение 4 – bounded wildcard</a></li><li><a href="index.xhtml#(26)">Проблема 5</a></li><li><a href="index.xhtml#(27)">Решение 5 – upper bounded wcard</a></li><li><a href="index.xhtml#(28)">Проблема 6</a></li><li><a href="index.xhtml#(29)">Решение 6 – wildcard capture </a></li><li class=" section"><a href="index.xhtml#(30)">Generics и вариантность</a></li><li><a href="index.xhtml#(31)">Вариантность</a></li><li><a href="index.xhtml#(32)">Вариантность фунций</a></li><li><a href="index.xhtml#(33)">Приведение типов для функций</a></li><li><a href="index.xhtml#(34)">Правила</a></li><li><a href="index.xhtml#(35)">Явное указание типов при вызове</a></li><li class=" section"><a href="index.xhtml#(36)">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(37)">Пример кода </a></li><li><a href="index.xhtml#(38)">Стирание информации о типах </a></li><li><a href="index.xhtml#(39)">Generic – один класс</a></li><li><a href="index.xhtml#(40)">Преобразование типов</a></li><li><a href="index.xhtml#(41)">Ограничения Generic</a></li><li class=" section"><a href="index.xhtml#(42)">Заключение</a></li><li><a href="index.xhtml#(43)">Ссылки</a></li><li><a href="index.xhtml#(44)">Вопросы</a></li></ol><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></div><div id="all" style="font-size: 100%;">
<div class="slide cover first-slide"><div class="course">Разработка на платформе Java</div><hr /><div class="lecture">Generics</div><div class="link"></div></div>
<div class="slide section hidden"><h1>Полиморфизм</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc current">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">2</span></div><br /><br /></div>
<div class="slide hidden"><h1>Полиморфизм</h1><div class="body"><ul class="item-1 level-1"><li>Один код, разные типы</li><li>Специальный (ad-hoc)<ul class="item-2 level-2"><li>Для каждого типа свое поведение</li><li>Времени компиляции</li><li>Времени исполнения</li></ul></li><li>Универсальный<ul class="item-2 level-2"><li>Одинаковое поведение для всех типов</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">3</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (1)</h1><div class="body"><ul class="item-1 level-1"><li>Операция сложения (<var>+</var>)<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="lit">1</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="lit">1.0</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1.0</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="lit">1.0</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span></pre></li></ul></li><li>Перегрузка по обоим параметрам</li><li>Перегрузка для разных типов и автоматизированное приведение типов<ul class="item-2 level-2"><li>Специальный полиморфизм времени компиляции</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">4</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (2)</h1><div class="body"><ul class="item-1 level-1"><li>Функция <var>printf</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">printf</span><span class="pun">(</span><span class="str">"%d"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">10</span><span class="pun">);</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">printf</span><span class="pun">(</span><span class="str">"%s"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"hello"</span><span class="pun">);</span></pre></li></ul></li><li>Перегрузка времени исполнения по всем параметрам, кроме первого и явная передача информации о типах<ul class="item-2 level-2"><li>Специальный полиморфизм времени исполнения</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">5</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (3)</h1><div class="body"><ul class="item-1 level-1"><li>Наследование в ООП<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> drawWithColor</span><span class="pun">(</span><span class="typ">Shape</span><span class="pln"> shape</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Color</span><span class="pln"> color</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    shape</span><span class="pun">.</span><span class="pln">setColor</span><span class="pun">(</span><span class="pln">color</span><span class="pun">);</span><span class="pln">
    shape</span><span class="pun">.</span><span class="pln">draw</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><var>drawWithColor</var><ul class="item-2 level-2"><li>Полиморфизм включения по первому параметру</li><li>Универсальный полиморфизм</li></ul></li><li><var>draw(this)</var><ul class="item-2 level-2"><li>Перегрузка времени исполнения по первому параметру</li><li>Специальный полиморфизм времени исполнения</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">6</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (4)</h1><div class="body"><ul class="item-1 level-1"><li>Определение типа во время исполнения<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> draw</span><span class="pun">(</span><span class="typ">Shape</span><span class="pln"> shape</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shape </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">Rect</span><span class="pun">)</span><span class="pln"> </span><span class="pun">…</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">shape </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">Circle</span><span class="pun">)</span><span class="pln"> </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li><var>draw()</var> – перегрузка времени исполнения<ul class="item-2 level-2"><li>Специальный полиморфизм времени исполнения</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">7</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (5)</h1><div class="body"><ul class="item-1 level-1"><li>Шаблоны в С++<ul class="item-2 level-2"><li><pre class="prettyprint lang-cpp prettyprinted" style=""><span class="kwd">template</span><span class="pln"> </span><span class="pun">&lt;</span><span class="kwd">typename</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln"> 
</span><span class="kwd">bool</span><span class="pln"> contains</span><span class="pun">(</span><span class="pln">T x</span><span class="pun">,</span><span class="pln"> T a</span><span class="pun">[],</span><span class="pln"> </span><span class="typ">int</span><span class="pln"> size</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> size</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x </span><span class="pun">==</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li>Перегрузка времени компиляции по всем параметрам<ul class="item-2 level-2"><li>Специальный полиморфизм времени компиляции</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">8</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример полиморфизма (6)</h1><div class="body"><ul class="item-1 level-1"><li>Generics в Java<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> contains</span><span class="pun">(</span><span class="pln">T item</span><span class="pun">,</span><span class="pln"> T</span><span class="pun">[]</span><span class="pln"> array</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="pln">T item </span><span class="pun">:</span><span class="pln"> array</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">equals</span><span class="pun">(</span><span class="pln">array</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li> Параметрический полиморфизм по <var> T </var><ul class="item-2 level-2"><li>Универсальный полиморфизм</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">9</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Введение в Generics</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc current">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">10</span></div><br /><br /></div>
<div class="slide hidden"><h1>Особенности Generics</h1><div class="body"><ul class="item-1 level-1"><li> Строгая типизация</li><li> Единая реализация<ul class="item-2 level-2"><li>Параметрический полиморфизм</li></ul></li><li> Отсутствие информации о типе</li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">11</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример generic-определения</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">E</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">void</span><span class="pln"> push</span><span class="pun">(</span><span class="pln">E element</span><span class="pun">);</span><span class="pln">
    E pop</span><span class="pun">();</span><span class="pln">
    E peek</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></li><li>Класс <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="pln">E</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">E</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">12</span></div><br /><br /></div>
<div class="slide hidden"><h1>Generic стек</h1><div class="body"><ul class="item-1 level-1"><li><var> Stack&lt;E&gt; </var> ─ стек элементов типа <var>E</var></li><li> Раньше<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span><span class="pln">
stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Integer</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">)</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span></pre></li></ul></li><li> Теперь<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;();</span><span class="pln">
stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="lit">1</span><span class="pun">);</span><span class="pln">
</span><span class="typ">Integer</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span></pre></li></ul></li><li> Java 7+<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> stack </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;&gt;();</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">13</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример реализация generic-класса </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="pln">E</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">E</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> E</span><span class="pun">[]</span><span class="pln"> elements</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        elements </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">E</span><span class="pun">[])</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> E peek</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> elements</span><span class="pun">[</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">14</span></div><br /><br /></div>
<div class="slide hidden"><h1>Несовместимость generic-типов</h1><div class="body"><ul class="item-1 level-1"><li> Generic-типы не совместимы по присваиванию <pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> si </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;&gt;();</span></pre><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> so </span><span class="pun">=</span><span class="pln"> si</span><span class="pun">;</span></pre></span></li><li> Иначе — ошибки <span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">so</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="str">"hello"</span><span class="pun">);</span><span class="pln">
</span><span class="com">// ClassCastException</span><span class="pln">
</span><span class="typ">Integer</span><span class="pln"> li </span><span class="pun">=</span><span class="pln"> si</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">();</span></pre></span></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">15</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Реализация Generic</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc current">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">16</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 1</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> dump</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Object</span><span class="pln"> o </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">o</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Вызовы<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">dump</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;(…));</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">dump</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…));</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">17</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 1 - wildcard</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> dump</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Object</span><span class="pln"> o </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">o</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Вызовы<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">dump</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;(…));</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">dump</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…));</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">18</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 2</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> draw</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Shape</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Shape</span><span class="pln"> shape </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln">
        shape</span><span class="pun">.</span><span class="pln">draw</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Вызовы<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">draw</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Shape</span><span class="pun">&gt;(…));</span><span class="pln"> </span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">draw</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Circle</span><span class="pun">&gt;(…));</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">19</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 2 – bounded wildcard</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> draw</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Shape</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">Shape</span><span class="pln"> shape </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln">
        shape</span><span class="pun">.</span><span class="pln">draw</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Вызовы<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">draw</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Shape</span><span class="pun">&gt;(…));</span><span class="pln"> </span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">draw</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Circle</span><span class="pun">&gt;(…));</span><span class="pln"> </span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">20</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 3</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> pushAll</span><span class="pun">(</span><span class="typ">Object</span><span class="pun">[]</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;());</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;());</span></pre></span></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">21</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 3 – generic-метод</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> pushAll</span><span class="pun">(</span><span class="pln">T</span><span class="pun">[]</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> c</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;());</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;());</span></pre></span></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">pushAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">String</span><span class="pun">[</span><span class="lit">10</span><span class="pun">],</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">22</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 4</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> moveAll</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> s1</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> s2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">s1</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        T o </span><span class="pun">=</span><span class="pln"> s1</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">();</span><span class="pln">
        s2</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">o</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></span></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">23</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 4 – bounded type argument</h1><div class="body"><ul class="item-1 level-1"><li>Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">,</span><span class="pln"> S </span><span class="kwd">extends</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln"> 
</span><span class="kwd">void</span><span class="pln"> moveAll</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">S</span><span class="pun">&gt;</span><span class="pln"> s1</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> s2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">s1</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        s2</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">s1</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">());</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">24</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 4 – bounded wildcard</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">void</span><span class="pln">
moveAll</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> T</span><span class="pun">&gt;</span><span class="pln"> s1</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> s2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">s1</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        s2</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">s1</span><span class="pun">.</span><span class="pln">pop</span><span class="pun">());</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;());</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">moveAll</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;(…),</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;());</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">25</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 5</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Comparable</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;&gt;</span><span class="pln">
T max</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Integer</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> max</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…));</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Test</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Comparable</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{…}</span></pre><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Test</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> max</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Test</span><span class="pun">&gt;(…));</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">26</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 5 – upper bounded wcard</h1><div class="body"><ul class="item-1 level-1"><li> Метод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">&lt;</span><span class="pln">T </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Comparable</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">super</span><span class="pln"> T</span><span class="pun">&gt;&gt;</span><span class="pln">
max</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span></pre></li><li> Примеры использования<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Integer</span><span class="pln"> I </span><span class="pun">=</span><span class="pln"> max</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…));</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Test</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Comparable</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{…}</span><span class="pln">
</span><span class="typ">Test</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> max</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Test</span><span class="pun">&gt;(…));</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">27</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблема 6</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">/** Duplicates top element of the stack */</span><span class="pln">
</span><span class="com">// Часть интерфейса</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> dup</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// Как реализовать?</span><span class="pln">
</span><span class="pun">}</span></pre></li><li class="incremental invisible"><div class="non-incremental"><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">void</span><span class="pln"> dup</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">());</span><span class="pln">
</span><span class="pun">}</span></pre></span></div></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">28</span></div><br /><br /></div>
<div class="slide hidden"><h1>Решение 6 – wildcard capture </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// Часть интерфейса</span><span class="pln">
</span><span class="kwd">void</span><span class="pln"> dup</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;?&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    dupImpl</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="com">// Настоящая реализация</span><span class="pln">
</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> dupImpl</span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> stack</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    stack</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">stack</span><span class="pun">.</span><span class="pln">peek</span><span class="pun">());</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">29</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Generics и вариантность</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc current">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">30</span></div><br /><br /></div>
<div class="slide hidden"><h1>Вариантность</h1><div class="body"><ul class="item-1 level-1"><li>Ковариантность<ul class="item-2 level-2"><li>Согласованность с отношением включения</li><li><var>S :&gt; T </var>⇒<var> G&lt;S&gt; :&gt; G&lt;T&gt;</var></li><li>Источник</li></ul></li><li>Контрвариантность<ul class="item-2 level-2"><li>Антисогласованность с отношением включения</li><li><var>S :&gt; T </var>⇒<var> G&lt;S&gt; &lt;: G&lt;T&gt;</var></li><li>Приемник</li></ul></li><li>Инвариантность<ul class="item-2 level-2"><li>Независимость от отношения включения</li><li><var>S :&gt; T </var>⇒<var> G&lt;S&gt;</var> не связан с <var>G&lt;T&gt;</var></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">31</span></div><br /><br /></div>
<div class="slide hidden"><h1>Вариантность фунций</h1><div class="body"><ul class="item-1 level-1"><li> Функция<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Function</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">,</span><span class="pln"> R</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
     R apply</span><span class="pun">(</span><span class="pln">T argument</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li><li> Совместимость по присваиванию (не Java)<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Function</span><span class="pun">&lt;</span><span class="pln">T1</span><span class="pun">,</span><span class="pln"> R1</span><span class="pun">&gt;</span><span class="pln"> f1</span><span class="pun">;</span><span class="pln"> 
</span><span class="typ">Function</span><span class="pun">&lt;</span><span class="pln">T2</span><span class="pun">,</span><span class="pln"> R2</span><span class="pun">&gt;</span><span class="pln"> f2 </span><span class="pun">=</span><span class="pln"> f1</span><span class="pun">;</span></pre></li></ul></li><li><span class="question">Что можно сказать о <var>T1</var>, <var>T2</var> и <var>R1</var>, <var>R2</var>?</span><ul class="item-2 level-2"><li class="incremental invisible"><div class="non-incremental"><var>T2 &lt;: T1</var> ─ контрвариантность</div></li><li class="incremental invisible"><div class="non-incremental"><var>R2 :&gt; R1</var> ─ ковариантность</div></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">32</span></div><br /><br /></div>
<div class="slide hidden"><h1>Приведение типов для функций</h1><div class="body"><ul class="item-1 level-1"><li>Контрвариантность аргумента</li><li>Ковариантность результата</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">static</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">,</span><span class="pln"> R</span><span class="pun">&gt;</span><span class="pln"> </span><span class="typ">Function</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">,</span><span class="pln"> R</span><span class="pun">&gt;</span><span class="pln"> cast</span><span class="pun">(</span><span class="pln">
    </span><span class="typ">Function</span><span class="pun">&lt;?</span><span class="pln"> </span><span class="kwd">super</span><span class="pln"> T</span><span class="pun">,</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> R</span><span class="pun">&gt;</span><span class="pln"> f
</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Function</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">,</span><span class="pln"> R</span><span class="pun">&gt;()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> R apply</span><span class="pun">(</span><span class="pln">T argument</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">apply</span><span class="pun">(</span><span class="pln">argument</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">33</span></div><br /><br /></div>
<div class="slide hidden"><h1>Правила</h1><div class="body"><ul class="item-1 level-1"><li> Источник<ul class="item-2 level-2"><li>Ковариантность</li><li><var>extends</var></li></ul></li><li> Приемник<ul class="item-2 level-2"><li>Контрвариантность</li><li><var>super</var></li></ul></li><li> Источник и приемник<ul class="item-2 level-2"><li>Инвариантный</li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">34</span></div><br /><br /></div>
<div class="slide hidden"><h1>Явное указание типов при вызове</h1><div class="body"><ul class="item-1 level-1"><li>Исходная функция<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Function</span><span class="pun">&lt;</span><span class="typ">Object</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> foi </span><span class="pun">=</span><span class="pln"> </span><span class="pun">…;</span></pre></li></ul></li><li>Преобразованная функция<ul class="item-2 level-2"><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Function</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln"> fso </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Function</span><span class="pun">.</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">foi</span><span class="pun">);</span></pre></span></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Function</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln"> fso </span><span class="pun">=</span><span class="pln">
    </span><span class="typ">Function</span><span class="pun">.&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">foi</span><span class="pun">);</span></pre></li></ul></li><li>Map<ul class="item-2 level-2"><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln"> ns </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">map</span><span class="pun">(</span><span class="typ">Function</span><span class="pun">.</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">foi</span><span class="pun">));</span></pre></span></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln"> ns </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.&lt;</span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln">map</span><span class="pun">(</span><span class="pln">
    </span><span class="typ">Function</span><span class="pun">.&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">foi</span><span class="pun">));</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln"> ns </span><span class="pun">=</span><span class="pln"> stack</span><span class="pun">.</span><span class="pln">map</span><span class="pun">(</span><span class="pln">
    </span><span class="typ">Function</span><span class="pun">.&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">&gt;</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">foi</span><span class="pun">));</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">35</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Смешение generic и не-generic кода</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc current">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">36</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример кода </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Queue</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> queue </span><span class="pun">=</span><span class="pln">
    </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayQueue</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;(…);</span><span class="pln">
</span><span class="typ">Integer</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">dequeue</span><span class="pun">();</span><span class="pln">
queue</span><span class="pun">.</span><span class="pln">enqueue</span><span class="pun">(</span><span class="pln">max</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">size</span><span class="pun">();</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Integer</span><span class="pln"> next </span><span class="pun">=</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">dequeue</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">next</span><span class="pun">.</span><span class="pln">compareTo</span><span class="pun">(</span><span class="pln">max</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        max </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    queue</span><span class="pun">.</span><span class="pln">enqueue</span><span class="pun">(</span><span class="pln">next</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">37</span></div><br /><br /></div>
<div class="slide hidden"><h1>Стирание информации о типах </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Queue</span><span class="pln"> queue </span><span class="pun">=</span><span class="pln">
    </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayQueue</span><span class="pun">(…);</span><span class="pln">
</span><span class="typ">Integer</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">)</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">dequeue</span><span class="pun">();</span><span class="pln">
queue</span><span class="pun">.</span><span class="pln">enqueue</span><span class="pun">(</span><span class="pln">max</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">size</span><span class="pun">();</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="typ">Integer</span><span class="pln"> next </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Integer</span><span class="pun">)</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">dequeue</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">next</span><span class="pun">.</span><span class="pln">compareTo</span><span class="pun">(</span><span class="pln">max</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        max </span><span class="pun">=</span><span class="pln"> next</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    queue</span><span class="pun">.</span><span class="pln">enqueue</span><span class="pun">(</span><span class="pln">next</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">38</span></div><br /><br /></div>
<div class="slide hidden"><h1>Generic – один класс</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> ss </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;();</span><span class="pln">
</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;</span><span class="pln"> si </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;();</span><span class="pln">
ss</span><span class="pun">.</span><span class="pln">getClass</span><span class="pun">()</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> si</span><span class="pun">.</span><span class="pln">getClass</span><span class="pun">()</span><span class="pln"> </span><span class="com">// True</span><span class="pln">
ss </span><span class="kwd">instanceof</span><span class="pln"> AS </span><span class="com">// True</span><span class="pln">
ss </span><span class="kwd">instanceof</span><span class="pln"> AS</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> </span><span class="com">// Запрещено</span></pre></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">39</span></div><br /><br /></div>
<div class="slide hidden"><h1>Преобразование типов</h1><div class="body"><ul class="item-1 level-1"><li> Уничтожение информации о типе<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pln"> s </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;();</span><span class="pln"> </span></pre></li></ul></li><li> Добавление информации о типе<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> s </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;)</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span><span class="pln"> </span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> s1 </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span></pre></li></ul></li><li> Unchecked warning<ul class="item-2 level-2"><li>Ответственность программиста</li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="lit">@SuppressWarnings</span><span class="pun">(</span><span class="str">"unchecked"</span><span class="pun">)</span><span class="pln">
</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;</span><span class="pln"> s1 </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">();</span></pre></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">40</span></div><br /><br /></div>
<div class="slide hidden"><h1>Ограничения Generic</h1><div class="body"><ul class="item-1 level-1"><li> Невозможно создать массив параметра типа<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> s</span><span class="pun">;</span><span class="pln"> </span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">T</span><span class="pun">[]</span><span class="pln"> elements</span><span class="pun">;</span><span class="pln"> </span><span class="com">// Object[]</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">new</span><span class="pln"> T</span><span class="pun">[</span><span class="lit">10</span><span class="pun">];</span></pre></span></li></ul></li><li> Невозможно создать массив Generic-классов<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayStack</span><span class="pun">&lt;</span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;&gt;();</span></pre></li><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">Stack</span><span class="pun">&lt;?&gt;[]</span><span class="pln"> stacks </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;?&gt;[</span><span class="lit">10</span><span class="pun">];</span></pre></li><li><span class="warn"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">new</span><span class="pln"> </span><span class="typ">Stack</span><span class="pun">&lt;</span><span class="typ">Integer</span><span class="pun">&gt;[</span><span class="lit">10</span><span class="pun">];</span></pre></span></li></ul></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">41</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Полиморфизм</a></li><li><a href="index.xhtml#(10)" class="toc">Введение в Generics</a></li><li><a href="index.xhtml#(16)" class="toc">Реализация Generic</a></li><li><a href="index.xhtml#(30)" class="toc">Generics и вариантность</a></li><li><a href="index.xhtml#(36)" class="toc">Смешение generic и не-generic кода</a></li><li><a href="index.xhtml#(42)" class="toc current">Заключение</a></li></ol></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">42</span></div><br /><br /></div>
<div class="slide hidden"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li>Java Tutorial. Generics // <a href="http://docs.oracle.com/javase/tutorial/java/generics/" target="_blank">http://docs.oracle.com<br />/javase/tutorial/java/generics/</a></li><li>Generics in the Java Programming Language // <a href="http://www.oracle.com/technetwork/java/javase/generics-tutorial-159168.pdf" target="_blank">http://www.oracle.com/technetwork/java/javase/<br />generics-tutorial-159168.pdf</a></li><li>JSR 14 (Generics) // <a href="http://jcp.org/en/jsr/detail?id=14" target="_blank"><br />http://jcp.org/en/jsr/detail?id=14</a></li></ul></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">43</span></div><br /><br /></div>
<div class="slide hidden"><h1>Вопросы</h1><div class="body"><div class="questions">???</div></div><div class="footer"><span class="title">Разработка на платформе Java Generics</span><span class="number">44</span></div><br /><br /></div></div><script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter19426939 = new Ya.Metrika({
                        id:19426939,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true,
                        webvisor:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
        </script><noscript><div><img src="./static/19426939" style="position:absolute; left:-9999px;" alt="" /></div></noscript><div class="toolbar hidden" tabindex="0"><div style="float: right; text-align: right"><span>слайд 1/44</span></div><div style="text-align: left"><span style="color: rgb(240, 240, 240);">* </span><a href="http://www.w3.org/Talks/Tools/Slidy2/help/help.html" title="Перемещайтесь кликая мышкой, используя клавишу пробел, стрелкивлево/вправо или Pg Up и Pg Dn. Клавиши S и B меняют размер шрифта.">помощь?</a> <a href="javascript:w3c_slidy.toggle_table_of_contents()" title="оглавление">содержание?</a> </div></div></body><span class="gr__tooltip"><span class="gr__tooltip-content" /><i class="gr__tooltip-logo" /><span class="gr__triangle" /></span></html>