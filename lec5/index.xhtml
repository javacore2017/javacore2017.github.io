<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru" class="gr__kgeorgiy_info"><head><title>Введение в многопоточное программирование (22)</title><meta name="author" content="$author" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="./static/slidy.css" /><link rel="stylesheet" type="text/css" href="./static/prettify.css" /><link rel="stylesheet" type="text/css" href="./static/kgeorgiy-slides.css" /><script type="text/javascript" async="" src="./static/watch.js.download" /><script type="text/javascript" src="./static/slidy.js.download" charset="utf-8" /><script type="text/javascript" src="./static/kgeorgiy-slides.js.download" charset="utf-8" /><script type="text/javascript" src="./static/prettify.js.download" /><script type="text/javascript" src="./static/lang-sql.js.download" /><style id="style-1-cropbar-clipper">/* Copyright 2014 Evernote Corporation. All rights reserved. */
.en-markup-crop-options {
    top: 18px !important;
    left: 50% !important;
    margin-left: -100px !important;
    width: 200px !important;
    border: 2px rgba(255,255,255,.38) solid !important;
    border-radius: 4px !important;
}

.en-markup-crop-options div div:first-of-type {
    margin-left: 0px !important;
}
</style></head><body onload="prettyPrint()" data-gr-c-s-loaded="true" style="visibility: visible;" class=" single_slide"><div class=" slidy_toc hidden"><div class=" toc-heading">Оглавление</div><ol><li><a href="index.xhtml#(1)">Введение в многопоточное программирование(1)</a></li><li class=" section"><a href="index.xhtml#(2)">Параллельное исполнение</a></li><li class=" subsection"><a href="index.xhtml#(3)">История</a></li><li><a href="index.xhtml#(4)">Однозадачные системы</a></li><li><a href="index.xhtml#(5)">Пакетные</a></li><li><a href="index.xhtml#(6)">Многозадачные системы</a></li><li><a href="index.xhtml#(7)">Многопоточные программы</a></li><li><a href="index.xhtml#(8)">Многопоточное программирование</a></li><li class=" subsection"><a href="index.xhtml#(9)">Примеры</a></li><li><a href="index.xhtml#(10)">Умножение матриц</a></li><li><a href="index.xhtml#(11)">Итеративный параллелизм</a></li><li><a href="index.xhtml#(12)">Обмен сообщениями (1)</a></li><li><a href="index.xhtml#(13)">Обмен сообщениями (2)</a></li><li><a href="index.xhtml#(14)">Обмен сообщениями (3)</a></li><li><a href="index.xhtml#(15)">Вычисление интеграла</a></li><li><a href="index.xhtml#(16)">Рекурсивный параллелизм</a></li><li class=" subsection"><a href="index.xhtml#(17)">Операции с потоками</a></li><li><a href="index.xhtml#(18)">Основные операции</a></li><li><a href="index.xhtml#(19)">Пример. Поиск максимума (1)</a></li><li><a href="index.xhtml#(20)">Пример. Поиск максимума (2)</a></li><li><a href="index.xhtml#(21)">Свойства планирования</a></li><li class=" section"><a href="index.xhtml#(22)">Потоки в Java</a></li><li><a href="index.xhtml#(23)">Создание потоков</a></li><li><a href="index.xhtml#(24)">Создание потока (Runnable)</a></li><li><a href="index.xhtml#(25)">Создание потока (Thread)</a></li><li><a href="index.xhtml#(26)">Состояния потока</a></li><li><a href="index.xhtml#(27)">Свойства потока</a></li><li><a href="index.xhtml#(28)">Взаимодействие потоков</a></li><li><a href="index.xhtml#(29)">Ожидание окончания потока</a></li><li><a href="index.xhtml#(30)">Прерывание потока</a></li><li><a href="index.xhtml#(31)">Дополнительные методы</a></li><li><a href="index.xhtml#(32)">Обработка данных в цикле</a></li><li class=" section"><a href="index.xhtml#(33)">Синхронизация</a></li><li class=" subsection"><a href="index.xhtml#(34)">Блокировки</a></li><li><a href="index.xhtml#(35)">Блокировка (lock, mutex)</a></li><li><a href="index.xhtml#(36)">Блокировки в Java</a></li><li><a href="index.xhtml#(37)">Методы экземпляра</a></li><li><a href="index.xhtml#(38)">Методы класса</a></li><li class=" subsection"><a href="index.xhtml#(39)">Пример</a></li><li><a href="index.xhtml#(40)">Производитель-потребитель</a></li><li><a href="index.xhtml#(41)">Интерфейс очереди</a></li><li><a href="index.xhtml#(42)">Производитель</a></li><li><a href="index.xhtml#(43)">Потребитель</a></li><li class=" subsection"><a href="index.xhtml#(44)">Мониторы и условия</a></li><li><a href="index.xhtml#(45)">Монитор</a></li><li><a href="index.xhtml#(46)">Мониторы и блокировки</a></li><li><a href="index.xhtml#(47)">Производитель (2)</a></li><li><a href="index.xhtml#(48)">Потребитель (2)</a></li><li><a href="index.xhtml#(49)">notify() и notifyAll()</a></li><li><a href="index.xhtml#(50)">Внезапные пробуждения</a></li><li class=" subsection"><a href="index.xhtml#(51)">Монитор как примитив</a></li><li><a href="index.xhtml#(52)">Монитор</a></li><li><a href="index.xhtml#(53)">Мониторы в Java</a></li><li><a href="index.xhtml#(54)">Проблемы мониторов</a></li><li class=" section"><a href="index.xhtml#(55)">Модель памяти Java</a></li><li><a href="index.xhtml#(56)">Модель памяти</a></li><li><a href="index.xhtml#(57)">Последовательная согласован.</a></li><li class=" subsection"><a href="index.xhtml#(58)">Атомарность</a></li><li><a href="index.xhtml#(59)">Атомарность</a></li><li><a href="index.xhtml#(60)">Атомарные чтение и запись</a></li><li><a href="index.xhtml#(61)">Неатомарные чтение и запись</a></li><li class=" subsection"><a href="index.xhtml#(62)">Видимость</a></li><li><a href="index.xhtml#(63)">Видимость изменений</a></li><li><a href="index.xhtml#(64)">Пример</a></li><li class=" subsection"><a href="index.xhtml#(65)">Упорядоченность</a></li><li><a href="index.xhtml#(66)">Порядок действий</a></li><li><a href="index.xhtml#(67)">Пример</a></li><li class=" subsection"><a href="index.xhtml#(68)">Volatile</a></li><li><a href="index.xhtml#(69)">Volatile-переменные</a></li><li><a href="index.xhtml#(70)">Пример 1</a></li><li><a href="index.xhtml#(71)">Пример 2</a></li><li class=" section"><a href="index.xhtml#(72)">Примеры</a></li><li class=" subsection"><a href="index.xhtml#(73)">Взаимная блокировка</a></li><li><a href="index.xhtml#(74)">Гарантированный deadlock </a></li><li><a href="index.xhtml#(75)">Диаграмма переходов для deadlock </a></li><li class=" subsection"><a href="index.xhtml#(76)">Барьер</a></li><li><a href="index.xhtml#(77)">Барьер</a></li><li><a href="index.xhtml#(78)">Диаграмма переходов для барьера </a></li><li class=" section"><a href="index.xhtml#(79)">Советы и рекомендации</a></li><li class=" subsection"><a href="index.xhtml#(80)">Уровни безопасности</a></li><li><a href="index.xhtml#(81)">Неизменяемые</a></li><li><a href="index.xhtml#(82)">Эффективно неизменяемые</a></li><li><a href="index.xhtml#(83)">Корректная публикация</a></li><li><a href="index.xhtml#(84)">Потокобезопасные</a></li><li><a href="index.xhtml#(85)">Условно потокобезопасные</a></li><li><a href="index.xhtml#(86)">Потоконебезопасные</a></li><li class=" subsection"><a href="index.xhtml#(87)">Обеспечение потокобезопасности</a></li><li><a href="index.xhtml#(88)">Делегирование</a></li><li><a href="index.xhtml#(89)">Привязка к потоку</a></li><li><a href="index.xhtml#(90)">Thread-local objects</a></li><li><a href="index.xhtml#(91)">Класс ThreadLocal</a></li><li class=" section"><a href="index.xhtml#(92)">Заключение</a></li><li><a href="index.xhtml#(93)">Правила синхронизации</a></li><li><a href="index.xhtml#(94)">Ожидание</a></li><li><a href="index.xhtml#(95)">Ссылки</a></li><li><a href="index.xhtml#(96)">Вопросы</a></li></ol><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></div><div id="all" style="font-size: 100%;">
<div class="slide cover first-slide hidden"><div class="course">Разработка на платформе Java</div><hr /><div class="lecture">Введение в многопоточное программирование</div><div class="link"></div><br /><br /></div>
<div class="slide section hidden"><h1>Параллельное исполнение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc current">Параллельное исполнение</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(3)" class="">История</a></li><li><a href="index.xhtml#(9)" class="">Примеры</a></li><li><a href="index.xhtml#(17)" class="">Операции с потоками</a></li></ol></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">2</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>История</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc current">Параллельное исполнение</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(3)" class=" current">История</a></li><li><a href="index.xhtml#(9)" class="">Примеры</a></li><li><a href="index.xhtml#(17)" class="">Операции с потоками</a></li></ol></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">3</span></div><br /><br /></div>
<div class="slide hidden"><h1>Однозадачные системы</h1><div class="body"><ul class="item-1 level-1"><li>Одна задача за раз<ul class="item-2 level-2"><li>Пока задача не завершилась – все ждут</li><li>Память – монопольное использование</li><li>Ввод-вывод – монопольное использование</li></ul></li><li>Пока не завершилась – все ждут<ul class="item-2 level-2"><li>Простой ресурсов</li><li>Большое время отклика</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">4</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пакетные</h1><div class="body"><ul class="item-1 level-1"><li>Набор заданий для исполнения (пакет)<ul class="item-2 level-2"><li>Память – разделяемая, изолированная</li><li>Ввод-вывод – переключение задач</li><li>Управление заданиями – монитор</li></ul></li><li>Псевдопараллельное исполнение<ul class="item-2 level-2"><li>Увеличение загрузки ресурсов</li><li>Большое время отклика</li></ul></li><li>1950-е годы</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">5</span></div><br /><br /></div>
<div class="slide hidden"><h1>Многозадачные системы</h1><div class="body"><ul class="item-1 level-1"><li>Несколько задач конкурируют за процессор<ul class="item-2 level-2"><li>Память – разделяемая, изолированная</li><li>Прерывание – переключение задач</li><li>Ввод-вывод – разделяемый</li></ul></li><li>Параллельное исполнение<ul class="item-2 level-2"><li>Уменьшение времени отклика</li></ul></li><li>1960-е годы</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">6</span></div><br /><br /></div>
<div class="slide hidden"><h1>Многопоточные программы</h1><div class="body"><ul class="item-1 level-1"><li>Несколько потоков конкурируют за процессор<ul class="item-2 level-2"><li>Память – общая</li><li>Прерывание – переключение потоков</li><li>Ввод-вывод – разделяемый</li></ul></li><li>Параллельное исполнение кода внутри программы<ul class="item-2 level-2"><li>Уменьшение времени отклика</li><li>1990-е годы</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">7</span></div><br /><br /></div>
<div class="slide hidden"><h1>Многопоточное программирование</h1><div class="body"><ul class="item-1 level-1"><li>Программа одновременно имеет несколько потоков исполнения</li><li>Потоки могут взаимодействовать друг с другом<ul class="item-2 level-2"><li>Синхронизация</li><li>Обмен сообщениями</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">8</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Примеры</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc current">Параллельное исполнение</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(3)" class="">История</a></li><li><a href="index.xhtml#(9)" class=" current">Примеры</a></li><li><a href="index.xhtml#(17)" class="">Операции с потоками</a></li></ol></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">9</span></div><br /><br /></div>
<div class="slide hidden"><h1>Умножение матриц</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// Матрицы размера n на n</span><span class="pln">
</span><span class="kwd">double</span><span class="pun">[][]</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> b</span><span class="pun">,</span><span class="pln"> c</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> j </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> j </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        c</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> k </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> k </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> k</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            c</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">k</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> b</span><span class="pun">[</span><span class="pln">k</span><span class="pun">][</span><span class="pln">j</span><span class="pun">];</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">10</span></div><br /><br /></div>
<div class="slide hidden"><h1>Итеративный параллелизм</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// Матрицы размера n на n</span><span class="pln">
</span><span class="kwd">double</span><span class="pun">[][]</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> b</span><span class="pun">,</span><span class="pln"> c</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">     </span><span class="com">// Параллельно</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> j </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> j </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Параллельно</span><span class="pln">
        c</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> k </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> k </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> k</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            c</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">][</span><span class="pln">k</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> b</span><span class="pun">[</span><span class="pln">k</span><span class="pun">][</span><span class="pln">j</span><span class="pun">];</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">11</span></div><br /><br /></div>
<div class="slide hidden"><h1>Обмен сообщениями (1)</h1><div class="body"><ul class="item-1 level-1"><li>Рабочий поток<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> a</span><span class="pun">;</span><span class="pln"> </span><span class="com">// a[i][*]</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[][]</span><span class="pln"> b</span><span class="pun">;</span><span class="pln">   </span><span class="com">// b[*][*]</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> c</span><span class="pun">;</span><span class="pln"> </span><span class="com">// c[i][*]</span><span class="pln">
    receive a</span><span class="pun">,</span><span class="pln"> b from coordinator</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> j </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> j </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        c</span><span class="pun">[</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> k </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> k </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> k</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            c</span><span class="pun">[</span><span class="pln">j</span><span class="pun">]</span><span class="pln"> </span><span class="pun">+=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">k</span><span class="pun">]</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> b</span><span class="pun">[</span><span class="pln">k</span><span class="pun">][</span><span class="pln">j</span><span class="pun">];</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    send c to coordinator</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">12</span></div><br /><br /></div>
<div class="slide hidden"><h1>Обмен сообщениями (2)</h1><div class="body"><ul class="item-1 level-1"><li>Управляющий поток<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">coordinator</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[][]</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> b</span><span class="pun">,</span><span class="pln"> c</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        send a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">],</span><span class="pln"> b to worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        receive c</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> from worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">13</span></div><br /><br /></div>
<div class="slide hidden"><h1>Обмен сообщениями (3)</h1><div class="body"><ul class="item-1 level-1"><li>Передача данных между рабочими потоками<ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> a</span><span class="pun">;</span><span class="pln"> </span><span class="com">// a[i][*]</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> b</span><span class="pun">;</span><span class="pln"> </span><span class="com">// b[*][i]</span><span class="pln">
    </span><span class="kwd">double</span><span class="pun">[]</span><span class="pln"> c</span><span class="pun">;</span><span class="pln"> </span><span class="com">// a[i][*]</span><span class="pln">
    receive a</span><span class="pun">,</span><span class="pln"> b from coordinator</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> j </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> j </span><span class="pun">&lt;</span><span class="pln"> n</span><span class="pun">;</span><span class="pln"> j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="com">// Вычисление с[j]</span><span class="pln">
        send b to worker</span><span class="pun">[(</span><span class="pln">i </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> n</span><span class="pun">];</span><span class="pln">
        receive b from worker</span><span class="pun">[(</span><span class="pln">i </span><span class="pun">+</span><span class="pln"> n </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> n</span><span class="pun">];</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    send c to coordinator</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">14</span></div><br /><br /></div>
<div class="slide hidden"><h1>Вычисление интеграла</h1><div class="body"><ul class="item-1 level-1"><li>Адаптивное вычисление интеграла <var>f(x)</var><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">double</span><span class="pln"> integrate</span><span class="pun">(</span><span class="kwd">double</span><span class="pln"> l</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">double</span><span class="pln"> r</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">abs</span><span class="pun">(</span><span class="pln">area</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">m</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">)</span><span class="pln"> </span><span class="pun">-</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">))</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">ε)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> integrate</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> integrate</span><span class="pun">(</span><span class="pln">m</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">m</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">double</span><span class="pln"> area</span><span class="pun">(</span><span class="kwd">double</span><span class="pln"> l</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">double</span><span class="pln"> r</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">f</span><span class="pun">(</span><span class="pln">l</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> f</span><span class="pun">(</span><span class="pln">r</span><span class="pun">))</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">(</span><span class="pln">r </span><span class="pun">-</span><span class="pln"> l</span><span class="pun">)</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">15</span></div><br /><br /></div>
<div class="slide hidden"><h1>Рекурсивный параллелизм</h1><div class="body"><ul class="item-1 level-1"><li>Адаптивное вычисление интеграла <var>f(x)</var><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">double</span><span class="pln"> integrate</span><span class="pun">(</span><span class="kwd">double</span><span class="pln"> l</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">double</span><span class="pln"> r</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">double</span><span class="pln"> m </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">l </span><span class="pun">+</span><span class="pln"> r</span><span class="pun">)</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">double</span><span class="pln"> la </span><span class="pun">=</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">double</span><span class="pln"> ra </span><span class="pun">=</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">m</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">);</span><span class="pln"> 
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">abs</span><span class="pun">(</span><span class="pln">la </span><span class="pun">+</span><span class="pln"> ra </span><span class="pun">-</span><span class="pln"> area</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">))</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">ε)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        la </span><span class="pun">=</span><span class="pln"> integrate</span><span class="pun">(</span><span class="pln">l</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Параллельно</span><span class="pln">
        ra </span><span class="pun">=</span><span class="pln"> integrate</span><span class="pun">(</span><span class="pln">m</span><span class="pun">,</span><span class="pln"> r</span><span class="pun">);</span><span class="pln"> </span><span class="com">// Параллельно</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> la </span><span class="pun">+</span><span class="pln"> ra</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">16</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Операции с потоками</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc current">Параллельное исполнение</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(3)" class="">История</a></li><li><a href="index.xhtml#(9)" class="">Примеры</a></li><li><a href="index.xhtml#(17)" class=" current">Операции с потоками</a></li></ol></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">17</span></div><br /><br /></div>
<div class="slide hidden"><h1>Основные операции</h1><div class="body"><ul class="item-1 level-1"><li>Создание потока</li><li>Уничтожение потока</li><li>Неделимая операция <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">〈</span><span class="pln">statements</span><span class="pun">〉</span></pre></li><li>Неделимая операция с ожиданием условия <pre class="prettyprint lang-java prettyprinted" style=""><span class="pun">〈</span><span class="pln">await</span><span class="pun">(</span><span class="pln">C</span><span class="pun">)</span><span class="pln"> statements</span><span class="pun">〉</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">18</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример. Поиск максимума (1)</h1><div class="body"><ul class="item-1 level-1"><li>Без синхронизации <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
create worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">max </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln"> 
</span><span class="pun">}</span></pre></li><li>С синхронизацией <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
create worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="pun">〈</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">max </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];〉</span><span class="pln"> 
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">19</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример. Поиск максимума (2)</h1><div class="body"><ul class="item-1 level-1"><li>Протокол Проверить-Проверить-Установить <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
create worker</span><span class="pun">[</span><span class="pln">i</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">max </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="pun">〈</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">max </span><span class="pun">&lt;</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">])</span><span class="pln"> max </span><span class="pun">=</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln"> </span><span class="pun">〉</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">20</span></div><br /><br /></div>
<div class="slide hidden"><h1>Свойства планирования</h1><div class="body"><ul class="item-1 level-1"><li>Безопасность</li><li>Живучесть</li><li>Справедливость<ul class="item-2 level-2"><li>Безусловная (отсутствие условий)</li><li>Слабая</li><li>Сильная <img class="bottom" src="./static/SchedulerFairness.svg" /></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">21</span></div><br /><br /></div>
<div class="slide section"><h1>Потоки в Java</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc current">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">22</span></div><br /><br /></div>
<div class="slide hidden"><h1>Создание потоков</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html" target="_blank">Thread</a></var><ul class="item-2 level-2"><li>Поток выполнения</li><li>Позволяет создавать потоки и производить операции с ними</li></ul></li><li>Интерфейс <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html" target="_blank">Runnable</a></var><ul class="item-2 level-2"><li>Сущность, которая может быть запущена</li><li><var>public void <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html#run--" target="_blank">run()</a></var></var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">23</span></div><br /><br /></div>
<div class="slide hidden"><h1>Создание потока (Runnable)</h1><div class="body"><ul class="item-1 level-1"><li>Рекомендуемый способ <pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// Создание</span><span class="pln">
</span><span class="typ">Thread</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Thread</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Runnable</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Hello"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">});</span><span class="pln">
</span><span class="com">// Запуск</span><span class="pln">
t</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">24</span></div><br /><br /></div>
<div class="slide hidden"><h1>Создание потока (Thread)</h1><div class="body"><ul class="item-1 level-1"><li><span class="warn">Не рекомендуемый способ</span><pre class="prettyprint lang-java prettyprinted" style=""><span class="com">// Создание</span><span class="pln">
</span><span class="typ">Thread</span><span class="pln"> t </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Thread</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Hello"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">};</span><span class="pln">
</span><span class="com">// Запуск</span><span class="pln">
t</span><span class="pun">.</span><span class="pln">start</span><span class="pun">();</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">25</span></div><br /><br /></div>
<div class="slide hidden"><h1>Состояния потока</h1><div class="body"><ul class="item-1 level-1"><li>Состояние потока возвращается методами<ul class="item-2 level-2"><li><var><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html" target="_blank">Thread.State</a></var> <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getState--" target="_blank">getState()</a></var></var></li><li><var>boolean <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#isAlive--" target="_blank">isAlive()</a></var></var></li></ul></li><li>Таблица состояний <table><tr><th><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getState--" target="_blank">getState()</a></var></th><th><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#isAlive--" target="_blank">isAlive()</a></var></th></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#NEW" target="_blank">NEW</a></var></td><td /></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#RUNNABLE" target="_blank">RUNNABLE</a></var></td><td> +</td></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#BLOCKED" target="_blank">BLOCKED</a></var></td><td> +</td></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#WAITING" target="_blank">WAITING</a></var></td><td> +</td></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#TIMED_WAITING" target="_blank">TIMED_WAITING</a></var></td><td> +</td></tr><tr><td><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.State.html#TERMINATED" target="_blank">TERMINATED</a></var></td><td /></tr></table></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">26</span></div><br /><br /></div>
<div class="slide hidden"><h1>Свойства потока</h1><div class="body"><ul class="item-1 level-1"><li>Основные свойства<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getId--" target="_blank">id</a></var> – идентификатор потока</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getName--" target="_blank">name</a></var> – имя потока</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getPriority--" target="_blank">priority</a></var> – приоритет<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#MIN_PRIORITY" target="_blank">MIN_PRIORITY</a></var>, <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#NORM_PRIORITY" target="_blank">NORM_PRIORITY</a></var>, <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#MAX_PRIORITY" target="_blank">MAX_PRIORITY</a></var></li></ul></li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#isDaemon--" target="_blank">daemon</a></var> – поток-демон</li></ul></li><li>Свойства потока не могут изменяться после запуска</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">27</span></div><br /><br /></div>
<div class="slide hidden"><h1>Взаимодействие потоков</h1><div class="body"><ul class="item-1 level-1"><li>Создание потока<ul class="item-2 level-2"><li>конструктор</li></ul></li><li>Запуск потока<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#start--" target="_blank">start()</a></var></li></ul></li><li>Ожидание окончания потока<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#join-long-" target="_blank">join(time?)</a></var></li></ul></li><li>Прерывание потока<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#interrupt--" target="_blank">interrupt()</a></var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">28</span></div><br /><br /></div>
<div class="slide hidden"><h1>Ожидание окончания потока</h1><div class="body"><ul class="item-1 level-1"><li>Ожидать до завершения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#join--" target="_blank">thread.join()</a></var></li></ul></li><li>Ожидать до завершения или истечения времени<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#join-long-" target="_blank">thread.join(millis)</a></var></li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#join-long-int-" target="_blank">thread.join(millis, nanos)</a></var></li></ul></li><li>Все методы ожидания кидают <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html" target="_blank">InterruptedException</a></var></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">29</span></div><br /><br /></div>
<div class="slide hidden"><h1>Прерывание потока</h1><div class="body"><ul class="item-1 level-1"><li>Установить флаг прерывания<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#interrupt--" target="_blank">thread.interrupt()</a></var></li></ul></li><li>Проверить флаг прерывания<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#isInterrupted--" target="_blank">thread.isInterrupted()</a></var></li></ul></li><li>Проверить и сбросить флаг прерывания<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#interrupted--" target="_blank">Thread.interrupted()</a></var></li></ul></li><li>Методы, которые ожидают в процессе выполнения должны бросать <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html" target="_blank">InterruptedException</a></var></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">30</span></div><br /><br /></div>
<div class="slide hidden"><h1>Дополнительные методы</h1><div class="body"><ul class="item-1 level-1"><li>Приостановка выполнения<ul class="item-2 level-2"><li>На время<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#sleep-long-" target="_blank">Thread.sleep(time)</a></var></li></ul></li><li>Позволить выполниться другим потокам<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#yield--" target="_blank">Thread.yield()</a></var></li></ul></li></ul></li><li>Получение текущего потока<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#currentThread--" target="_blank">Thread.currentThread()</a></var></li></ul></li><li>Обработка исключений<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#getDefaultUncaughtExceptionHandler--" target="_blank">defaultUncaughtExceptionHandler</a></var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">31</span></div><br /><br /></div>
<div class="slide hidden"><h1>Обработка данных в цикле</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Worker</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Runnable</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(!</span><span class="typ">Thread</span><span class="pun">.</span><span class="pln">interrupted</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="com">// Полезные действия</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">InterruptedException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// Поток заканчивает работу</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">finally</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="com">// Восстановление флага прерывания</span><span class="pln">
            </span><span class="typ">Thread</span><span class="pun">.</span><span class="pln">currentThread</span><span class="pun">().</span><span class="pln">interrupt</span><span class="pun">();</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">32</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Синхронизация</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc current">Синхронизация</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(34)" class="">Блокировки</a></li><li><a href="index.xhtml#(39)" class="">Пример</a></li><li><a href="index.xhtml#(44)" class="">Мониторы и условия</a></li><li><a href="index.xhtml#(51)" class="">Монитор как примитив</a></li></ol></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">33</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Блокировки</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc current">Синхронизация</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(34)" class=" current">Блокировки</a></li><li><a href="index.xhtml#(39)" class="">Пример</a></li><li><a href="index.xhtml#(44)" class="">Мониторы и условия</a></li><li><a href="index.xhtml#(51)" class="">Монитор как примитив</a></li></ol></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">34</span></div><br /><br /></div>
<div class="slide hidden"><h1>Блокировка (lock, mutex)</h1><div class="body"><ul class="item-1 level-1"><li>Только один поток может владеть блокировкой</li><li>Операции<ul class="item-2 level-2"><li><var>lock</var> — получить блокировку</li><li><var>unlock</var> — отдать блокировку</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">35</span></div><br /><br /></div>
<div class="slide hidden"><h1>Блокировки в Java</h1><div class="body"><ul class="item-1 level-1"><li>Любой объект может служить блокировкой<ul class="item-2 level-2"><li>Снятие блокировки производится автоматически</li></ul></li><li>Синтаксис <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Получение блокировки</span><span class="pln">
</span><span class="pun">…</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="com">// Снятие блокировки</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">36</span></div><br /><br /></div>
<div class="slide hidden"><h1>Методы экземпляра</h1><div class="body"><ul class="item-1 level-1"><li>Метод экземпляра может быть объявлен синхронизованным <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getValue</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span></pre></li><li>Эквивалентно <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getValue</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">37</span></div><br /><br /></div>
<div class="slide hidden"><h1>Методы класса</h1><div class="body"><ul class="item-1 level-1"><li>Метод класса может быть объявлен синхронизованным <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Example</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getValue</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span></pre></li><li>Эквивалентно <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getValue</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Example</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">38</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Пример</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc current">Синхронизация</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(34)" class="">Блокировки</a></li><li><a href="index.xhtml#(39)" class=" current">Пример</a></li><li><a href="index.xhtml#(44)" class="">Мониторы и условия</a></li><li><a href="index.xhtml#(51)" class="">Монитор как примитив</a></li></ol></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">39</span></div><br /><br /></div>
<div class="slide hidden"><h1>Производитель-потребитель</h1><div class="body"><ul class="item-1 level-1"><li>Несколько потоков производят данные</li><li>Несколько потоков потребляют данные</li><li>Данные могут храниться в очереди (не)ограниченного объема </li></ul><div class="img-width"><img class="width" style="width: 75%" src="./static/ThreadsProducerConsumer.svg" /></div></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">40</span></div><br /><br /></div>
<div class="slide hidden"><h1>Интерфейс очереди</h1><div class="body"><ul class="item-1 level-1"><li>Хранит один элемент <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">class</span><span class="pln"> </span><span class="typ">Queue</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> data</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> set</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> data</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> get</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">…</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">41</span></div><br /><br /></div>
<div class="slide hidden"><h1>Производитель</h1><div class="body"><ul class="item-1 level-1"><li>Установка значения <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> set</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> data</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">        
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Активное ожидание</span><span class="pln">
        </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> data</span><span class="pun">;</span><span class="pln">
                </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">42</span></div><br /><br /></div>
<div class="slide hidden"><h1>Потребитель</h1><div class="body"><ul class="item-1 level-1"><li>Получение значения <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> get</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">        
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// Активное ожидание</span><span class="pln">
        </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">Object</span><span class="pln"> d </span><span class="pun">=</span><span class="pln"> data</span><span class="pun">;</span><span class="pln">  data </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
                </span><span class="kwd">return</span><span class="pln"> d</span><span class="pun">;</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">43</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Мониторы и условия</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc current">Синхронизация</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(34)" class="">Блокировки</a></li><li><a href="index.xhtml#(39)" class="">Пример</a></li><li><a href="index.xhtml#(44)" class=" current">Мониторы и условия</a></li><li><a href="index.xhtml#(51)" class="">Монитор как примитив</a></li></ol></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">44</span></div><br /><br /></div>
<div class="slide hidden"><h1>Монитор</h1><div class="body"><ul class="item-1 level-1"><li>Любой объект может быть монитором</li><li>Передача событий<ul class="item-2 level-2"><li>Ожидание условия<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-" target="_blank">wait(time?)</a></var></li></ul></li><li>Извещение одного из ждущих потоков<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--" target="_blank">notify()</a></var></li></ul></li><li>Извещение всех ждущих потоков<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--" target="_blank">notifyAll()</a></var></li></ul></li></ul></li><li>Нужно владеть блокировкой<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalMonitorStateException.html" target="_blank">IllegalMonitorStateException</a></var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">45</span></div><br /><br /></div>
<div class="slide hidden"><h1>Мониторы и блокировки</h1><div class="body"><ul class="item-1 level-1"><li>При ожидании монитора блокировка с него снимается</li><li>При извещении поток не получает управления пока не может получить блокировку обратно</li><li>Псевдокод <pre class="prettyprint lang-java prettyprinted" style=""><span class="pln">monitor</span><span class="pun">.</span><span class="pln">unlock</span><span class="pun">()</span><span class="pln">
monitor</span><span class="pun">.</span><span class="pln">await</span><span class="pun">()</span><span class="pln">
monitor</span><span class="pun">.</span><span class="pln">lock</span><span class="pun">()</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">46</span></div><br /><br /></div>
<div class="slide hidden"><h1>Производитель (2)</h1><div class="body"><ul class="item-1 level-1"><li>Установка значения <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> set</span><span class="pun">(</span><span class="typ">Object</span><span class="pln"> data</span><span class="pun">)</span><span class="pln"> 
    </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">InterruptedException</span><span class="pln"> 
</span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        wait</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Пассивное ожидание</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> data</span><span class="pun">;</span><span class="pln">
    notifyAll</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">47</span></div><br /><br /></div>
<div class="slide hidden"><h1>Потребитель (2)</h1><div class="body"><ul class="item-1 level-1"><li>Получение значения <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> get</span><span class="pun">()</span><span class="pln"> 
    </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">InterruptedException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        wait</span><span class="pun">();</span><span class="pln"> </span><span class="com">// Пассивное ожидание</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> 
    </span><span class="typ">Object</span><span class="pln"> d </span><span class="pun">=</span><span class="pln"> data</span><span class="pun">;</span><span class="pln">
    data </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
    notifyAll</span><span class="pun">();</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> d</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">48</span></div><br /><br /></div>
<div class="slide hidden"><h1>notify() и notifyAll()</h1><div class="body"><ul class="item-1 level-1"><li>События одного вида<ul class="item-2 level-2"><li>Может обработать любой ждущий поток</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--" target="_blank">notify()</a></var></li></ul></li><li>Несколько видов событий<ul class="item-2 level-2"><li>Побуждение «не того» потока</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--" target="_blank">notifyAll()</a></var></li><li>Более дорогая операция</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">49</span></div><br /><br /></div>
<div class="slide hidden"><h1>Внезапные пробуждения</h1><div class="body"><ul class="item-1 level-1"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--" target="_blank">wait()</a></var> может завершиться без <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--" target="_blank">notify()</a></var><ul class="item-2 level-2"><li>Проверить наступление события</li><li>Ожидать всегда в цикле</li></ul></li><li>Идиома <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">while</span><span class="pln"> </span><span class="pun">(требуемое</span><span class="pln"> </span><span class="pun">условие)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    wait</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">50</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Монитор как примитив</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc current">Синхронизация</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(34)" class="">Блокировки</a></li><li><a href="index.xhtml#(39)" class="">Пример</a></li><li><a href="index.xhtml#(44)" class="">Мониторы и условия</a></li><li><a href="index.xhtml#(51)" class=" current">Монитор как примитив</a></li></ol></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">51</span></div><br /><br /></div>
<div class="slide hidden"><h1>Монитор</h1><div class="body"><ul class="item-1 level-1"><li>Разделяемые переменные инкапсулированы в мониторе</li><li>Код в мониторе исполняется не более чем одним потоком</li><li>Условия</li><li>Операции с условиями<ul class="item-2 level-2"><li><var>wait</var> ‒ ожидание условия</li><li><var>notify</var> ‒ сообщение об условии одному потоку</li><li><var>notifyAll</var> ‒ сообщение об условии всем потокам</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">52</span></div><br /><br /></div>
<div class="slide hidden"><h1>Мониторы в Java</h1><div class="body"><ul class="item-1 level-1"><li>Любой объект<ul class="item-2 level-2"><li>Все методы <var>synchronized</var></li><li>Одно событие</li></ul></li><li>На блокировках<ul class="item-2 level-2"><li>Ручная синхронизация</li><li>Много событий</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">53</span></div><br /><br /></div>
<div class="slide hidden"><h1>Проблемы мониторов</h1><div class="body"><ul class="item-1 level-1"><li>Блокировка между операциями отпускается<ul class="item-2 level-2"><li>Составные операции не атомарны</li><li>Конкуренция за блокировку</li><li><span class="question">Java: огрубление блокировок</span></li></ul></li><li>Пример <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">queue</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// Fail</span><span class="pln">
    </span><span class="typ">Object</span><span class="pln"> o </span><span class="pun">=</span><span class="pln"> queue</span><span class="pun">.</span><span class="pln">poll</span><span class="pun">();</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">54</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Модель памяти Java</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc current">Модель памяти Java</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(58)" class="">Атомарность</a></li><li><a href="index.xhtml#(62)" class="">Видимость</a></li><li><a href="index.xhtml#(65)" class="">Упорядоченность</a></li><li><a href="index.xhtml#(68)" class="">Volatile</a></li></ol></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">55</span></div><br /><br /></div>
<div class="slide hidden"><h1>Модель памяти</h1><div class="body"><ul class="item-1 level-1"><li>Что может увидеть операция чтения</li><li>Однопоточная модель<ul class="item-2 level-2"><li>Результаты последней записи</li></ul></li><li>Многопочная модель<ul class="item-2 level-2"><li><span class="question">Что такое последняя запись?</span></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">56</span></div><br /><br /></div>
<div class="slide hidden"><h1>Последовательная согласован.</h1><div class="body"><ul class="item-1 level-1"><li>Результат эквивалентен какому-то последовательному исполнению<ul class="item-2 level-2"><li>Внутри потока — в порядке кода</li><li>Между потоками — произвольные переключения</li></ul></li><li><span class="warn">Не гарантируется Java</span><ul class="item-2 level-2"><li>Иначе нельзя использовать регистры</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">57</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Атомарность</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc current">Модель памяти Java</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(58)" class=" current">Атомарность</a></li><li><a href="index.xhtml#(62)" class="">Видимость</a></li><li><a href="index.xhtml#(65)" class="">Упорядоченность</a></li><li><a href="index.xhtml#(68)" class="">Volatile</a></li></ol></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">58</span></div><br /><br /></div>
<div class="slide hidden"><h1>Атомарность</h1><div class="body"><ul class="item-1 level-1"><li>Атомарная операция выполняется как единое целое<ul class="item-2 level-2"><li>Значения не появляются «из ниоткуда»</li></ul></li><li>Чтение и присвоение значений являются атомарными<ul class="item-2 level-2"><li>Кроме <var>long</var> и <var>double</var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">59</span></div><br /><br /></div>
<div class="slide hidden"><h1>Атомарные чтение и запись</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Thread 1</span><span class="pln">
a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Thread 2</span><span class="pln">
</span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">a</span><span class="pun">);</span></pre></li><li>Возможные значения <var>a</var><ul class="item-2 level-2"><li><var>0</var>, <var>1</var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">60</span></div><br /><br /></div>
<div class="slide hidden"><h1>Неатомарные чтение и запись</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">long</span><span class="pln"> a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Thread 1</span><span class="pln">
a </span><span class="pun">=</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Thread 2</span><span class="pln">
</span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="pln">a</span><span class="pun">);</span></pre></li><li>Возможные значения <var>a</var><ul class="item-2 level-2"><li><var>0</var>, <var>1</var></li><li><var>0xffffffff00000000</var>, <var>0x00000000ffffffff</var></li><li><var>2</var>, <var>3</var></li><li>…</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">61</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Видимость</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc current">Модель памяти Java</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(58)" class="">Атомарность</a></li><li><a href="index.xhtml#(62)" class=" current">Видимость</a></li><li><a href="index.xhtml#(65)" class="">Упорядоченность</a></li><li><a href="index.xhtml#(68)" class="">Volatile</a></li></ol></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">62</span></div><br /><br /></div>
<div class="slide hidden"><h1>Видимость изменений</h1><div class="body"><ul class="item-1 level-1"><li>Изменения произведенные потоком 1 видимы потоком 2<ul class="item-2 level-2"><li>После изменений поток 1 освободил блокировку, которую захватил поток 2</li><li>После изменения поток 1 создал поток 2</li><li>Поток 2 дождался окончания потока 1</li></ul></li><li><span class="warn">При неправильной синхронизации изменения могут быть видимы в произвольном порядке</span></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">63</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">int</span><span class="pln"> b </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
b </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span></pre></li><li>Возможные значения пары <var>а</var>, <var>b</var><ul class="item-2 level-2"><li><var>0</var>, <var>0</var></li><li><var>1</var>, <var>0</var></li><li><var>1</var>, <var>2</var></li><li><var>0</var>, <var>2</var></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">64</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Упорядоченность</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc current">Модель памяти Java</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(58)" class="">Атомарность</a></li><li><a href="index.xhtml#(62)" class="">Видимость</a></li><li><a href="index.xhtml#(65)" class=" current">Упорядоченность</a></li><li><a href="index.xhtml#(68)" class="">Volatile</a></li></ol></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">65</span></div><br /><br /></div>
<div class="slide hidden"><h1>Порядок действий</h1><div class="body"><ul class="item-1 level-1"><li>Со своей точки зрения<ul class="item-2 level-2"><li>Поток выполняется последовательно</li></ul></li><li>С точки зрения других потоков<ul class="item-2 level-2"><li><span class="warn">Выполнение может производиться в произвольном порядке</span></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">66</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">int</span><span class="pln"> a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">
a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span></pre></li><li>Возможные последовательности значений <var>а</var><ul class="item-2 level-2"><li><var>0</var>, <var>0</var></li><li><var>0</var>, <var>1</var></li><li><var>0</var>, <var>2</var></li><li><var>1</var>, <var>2</var></li><li><var>2</var>, <var>0</var></li><li><var>2</var>, <var>1</var></li><li>…</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">67</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Volatile</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc current">Модель памяти Java</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(58)" class="">Атомарность</a></li><li><a href="index.xhtml#(62)" class="">Видимость</a></li><li><a href="index.xhtml#(65)" class="">Упорядоченность</a></li><li><a href="index.xhtml#(68)" class=" current">Volatile</a></li></ol></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">68</span></div><br /><br /></div>
<div class="slide hidden"><h1>Volatile-переменные</h1><div class="body"><ul class="item-1 level-1"><li>Операции с volatile-переменными всегда атомарны</li><li>При чтение значения volatile-переменной оно всегда читается из общей памяти</li><li>При записи значения volatile-переменной оно всегда записывается в общую память</li><li><span class="warn">Если volatile-ссылка изменилась, то данные доступные по ней могли не измениться</span><ul class="item-2 level-2"><li>До Java 5</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">69</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример 1</h1><div class="body"><ul class="item-1 level-1"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="typ">List</span><span class="pln"> l </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Поток 1</span><span class="pln">
</span><span class="typ">List</span><span class="pln"> l </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayList</span><span class="pun">();</span><span class="pln">
l</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Object</span><span class="pun">());</span><span class="pln">
</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">l </span><span class="pun">=</span><span class="pln"> l</span><span class="pun">;</span><span class="pln">
</span><span class="com">// Поток 2</span><span class="pln">
</span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">l </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="kwd">return</span><span class="pln"> l</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="lit">0</span><span class="pun">);</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">70</span></div><br /><br /></div>
<div class="slide hidden"><h1>Пример 2</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Singleton</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Singleton</span><span class="pln"> instance</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Singleton</span><span class="pln"> getInstance</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instance </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
            </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Singleton</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instance </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                    instance </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Singleton</span><span class="pun">();</span><span class="pln">
                </span><span class="pun">}</span><span class="pln">
            </span><span class="pun">}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> instance</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">71</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Примеры</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc current">Примеры</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(73)" class="">Взаимная блокировка</a></li><li><a href="index.xhtml#(76)" class="">Барьер</a></li></ol></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">72</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Взаимная блокировка</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc current">Примеры</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(73)" class=" current">Взаимная блокировка</a></li><li><a href="index.xhtml#(76)" class="">Барьер</a></li></ol></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">73</span></div><br /><br /></div>
<div class="slide hidden"><h1>Гарантированный deadlock </h1><div class="body"><pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 0</span><span class="pln">
    </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 1</span><span class="pln">
        o1</span><span class="pun">.</span><span class="pln">notifyAll</span><span class="pun">();</span><span class="pln"> </span><span class="com">// 2</span><span class="pln">
        </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="pln">o2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 3</span><span class="pln">
            </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                o2</span><span class="pun">.</span><span class="pln">wait</span><span class="pun">();</span><span class="pln"> </span><span class="com">// unlock 4, await 5, lock 6</span><span class="pln">
            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">InterruptedException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{}</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="com">// 7</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="com">// 8</span><span class="pln">
</span><span class="pun">}</span></pre></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">74</span></div><br /><br /></div>
<div class="slide hidden"><h1>Диаграмма переходов для deadlock </h1><div class="body"><div class="img-width"><img class="width" style="width: 65%" src="./static/DeadlockDiagram.svg" /></div></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">75</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Барьер</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc current">Примеры</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(73)" class="">Взаимная блокировка</a></li><li><a href="index.xhtml#(76)" class=" current">Барьер</a></li></ol></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">76</span></div><br /><br /></div>
<div class="slide hidden"><h1>Барьер</h1><div class="body"><ul class="item-1 level-1"><li>Потоки дожидаются оконания друг друга <pre class="prettyprint lang-java prettyprinted" style=""><span class="kwd">public</span><span class="pln"> await</span><span class="pun">(</span><span class="typ">Barrier</span><span class="pln"> that</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 0</span><span class="pln">
    </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 1</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">gen</span><span class="pun">++;</span><span class="pln">     </span><span class="com">// 2</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">notify</span><span class="pun">();</span><span class="pln">    </span><span class="com">// 3</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="com">// 4</span><span class="pln">
    </span><span class="kwd">synchronized</span><span class="pln"> </span><span class="pun">(</span><span class="pln">that</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 5</span><span class="pln">
        </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">gen </span><span class="pun">&gt;</span><span class="pln"> that</span><span class="pun">.</span><span class="pln">gen</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// 6</span><span class="pln">
            that</span><span class="pun">.</span><span class="pln">wait</span><span class="pun">();</span><span class="pln"> </span><span class="com">// unlock 7, await 8, lock 9</span><span class="pln">
        </span><span class="pun">}</span><span class="pln"> </span><span class="com">// 10</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="com">// 11</span><span class="pln">
</span><span class="pun">}</span></pre></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">77</span></div><br /><br /></div>
<div class="slide hidden"><h1>Диаграмма переходов для барьера </h1><div class="body"><div class="img-width"><img class="width" style="width: 65%" src="./static/BarrierDiagram.svg" /></div></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">78</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Советы и рекомендации</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc current">Советы и рекомендации</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(80)" class="">Уровни безопасности</a></li><li><a href="index.xhtml#(87)" class="">Обеспечение потокобезопасности</a></li></ol></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">79</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Уровни безопасности</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc current">Советы и рекомендации</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(80)" class=" current">Уровни безопасности</a></li><li><a href="index.xhtml#(87)" class="">Обеспечение потокобезопасности</a></li></ol></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">80</span></div><br /><br /></div>
<div class="slide hidden"><h1>Неизменяемые</h1><div class="body"><ul class="item-1 level-1"><li>Не изменяются с момента создания<ul class="item-2 level-2"><li>Все поля <var>final</var></li><li>Ссылаются только на неизменяемые объекты</li></ul></li><li>Потокобезопасны<ul class="item-2 level-2"><li>Синхронизация не требуется</li></ul></li><li>Immutable</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">81</span></div><br /><br /></div>
<div class="slide hidden"><h1>Эффективно неизменяемые</h1><div class="body"><ul class="item-1 level-1"><li>Не изменяются с определенного момента<ul class="item-2 level-2"><li>Вся инициализация в одном потоке</li><li>Ссылаются только на (эффективно) неизменяемые объекты</li></ul></li><li>Потокобезопасны<ul class="item-2 level-2"><li>Корректно опубликованы</li></ul></li><li>Effective immutable</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">82</span></div><br /><br /></div>
<div class="slide hidden"><h1>Корректная публикация</h1><div class="body"><ul class="item-1 level-1"><li>Корректное получение ссылки на объект<ul class="item-2 level-2"><li>Полностью инициализирован</li><li>Опубликован с барьером</li><li>Получен с барьером</li></ul></li><li><span class="warn">Ссылки до окончания конструктора</span><ul class="item-2 level-2"><li><span class="warn">Переопределяемые методы</span></li><li><span class="warn">Регистрация слушателей</span></li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">83</span></div><br /><br /></div>
<div class="slide hidden"><h1>Потокобезопасные</h1><div class="body"><ul class="item-1 level-1"><li>Внутренняя синхронизация<ul class="item-2 level-2"><li>Для одиночных операций синхронизация не требуется</li><li>Внешняя синхронизация при массовых операциях</li></ul></li><li>Thread-safe</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">84</span></div><br /><br /></div>
<div class="slide hidden"><h1>Условно потокобезопасные</h1><div class="body"><ul class="item-1 level-1"><li>Внешняя синхронизация<ul class="item-2 level-2"><li>Синхронизация требуется для всех операций</li><li>Ответственность на вызывающем</li></ul></li><li>Conditionally thread-safe</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">85</span></div><br /><br /></div>
<div class="slide hidden"><h1>Потоконебезопасные</h1><div class="body"><ul class="item-1 level-1"><li>Не могут использоваться в многопоточной среде<ul class="item-2 level-2"><li>Патологический случай</li><li>Надо избегать</li></ul></li><li>Thread-hostile</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">86</span></div><br /><br /></div>
<div class="slide subsection hidden"><h1>Обеспечение потокобезопасности</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc current">Советы и рекомендации</a><ol class="level-2 toc-2"><li><a href="index.xhtml#(80)" class="">Уровни безопасности</a></li><li><a href="index.xhtml#(87)" class=" current">Обеспечение потокобезопасности</a></li></ol></li><li><a href="index.xhtml#(92)" class="toc">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">87</span></div><br /><br /></div>
<div class="slide hidden"><h1>Делегирование</h1><div class="body"><ul class="item-1 level-1"><li>Одно поле<ul class="item-2 level-2"><li>Ссылка не изменяется</li><li>Потокобезопасный объект</li><li>Атомарные или независимые операции</li></ul></li><li>Можно делегировать всю синхронизацию</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">88</span></div><br /><br /></div>
<div class="slide hidden"><h1>Привязка к потоку</h1><div class="body"><ul class="item-1 level-1"><li>Один поток – один экземпляр<ul class="item-2 level-2"><li>Thead-local objects</li></ul></li><li>Проблемы с взаимодействием</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">89</span></div><br /><br /></div>
<div class="slide hidden"><h1>Thread-local objects</h1><div class="body"><ul class="item-1 level-1"><li>Существует по одному на каждый поток<ul class="item-2 level-2"><li>Каждый может использовать безопасно</li></ul></li><li>Доступ<ul class="item-2 level-2"><li>Идентификатор</li><li>Чтение локального объекта</li><li>Запись локального объекта</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">90</span></div><br /><br /></div>
<div class="slide hidden"><h1>Класс ThreadLocal</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html" target="_blank">ThreadLocal&lt;T&gt;</a></var></li><li>Конструкторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#ThreadLocal--" target="_blank">ThreadLocal()</a></var> – новый идентификатор</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#get--" target="_blank">get()</a></var> – чтение</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#set-T-" target="_blank">set(value)</a></var> – запись</li><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#remove--" target="_blank">remove()</a></var> – удаление</li></ul></li><li>Наследование<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html#initialValue--" target="_blank">initialValue()</a></var> – исходное значение</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">91</span></div><br /><br /></div>
<div class="slide section hidden"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="index.xhtml#(2)" class="toc">Параллельное исполнение</a></li><li><a href="index.xhtml#(22)" class="toc">Потоки в Java</a></li><li><a href="index.xhtml#(33)" class="toc">Синхронизация</a></li><li><a href="index.xhtml#(55)" class="toc">Модель памяти Java</a></li><li><a href="index.xhtml#(72)" class="toc">Примеры</a></li><li><a href="index.xhtml#(79)" class="toc">Советы и рекомендации</a></li><li><a href="index.xhtml#(92)" class="toc current">Заключение</a></li></ol></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">92</span></div><br /><br /></div>
<div class="slide hidden"><h1>Правила синхронизации</h1><div class="body"><ul class="item-1 level-1"><li>Работать с разделяемыми значениями только под блокировкой<ul class="item-2 level-2"><li>Взял блокировку</li><li>Прочел/изменил значение</li><li>Отпустил блокировку</li></ul></li><li>Мало блокировок<ul class="item-2 level-2"><li><span class="warn">При отсутствии правильной синхронизации потоки могут увидеть практически что угодно</span></li></ul></li><li>Много блокировок<ul class="item-2 level-2"><li>Взаимная блокировка</li></ul></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">93</span></div><br /><br /></div>
<div class="slide hidden"><h1>Ожидание</h1><div class="body"><ul class="item-1 level-1"><li>Используйте <var><var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--" target="_blank">notify</a></var>[<var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--" target="_blank">All</a></var>]()</var> / <var><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--" target="_blank">wait()</a></var><ul class="item-2 level-2"><li>Всегда под блокировкой</li><li>Различайте события</li></ul></li><li><span class="warn">Не допускайте активного ожидания</span></li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">94</span></div><br /><br /></div>
<div class="slide hidden"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li>JLS. Threads and Locks // <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html" target="_blank">http://docs.oracle.com/javase/specs/jls/se8/<br />html/jls-17.html</a></li><li>Concurrency (Java Tutorial) // <a href="http://docs.oracle.com/javase/tutorial/essential/concurrency/" target="_blank">http://docs.oracle.com/javase/tutorial/essential/<br />concurrency/</a></li><li>Java Memory Model Pragmatics // <a href="http://shipilev.net/blog/2014/jmm-pragmatics/" target="_blank">http://shipilev.net/blog/2014/jmm-pragmatics/</a></li><li>Lea D. Concurrent Programming in Java</li><li>Garg V. Concurrent and Distributed Computing in Java</li></ul></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">95</span></div><br /><br /></div>
<div class="slide hidden"><h1>Вопросы</h1><div class="body"><div class="questions">???</div></div><div class="footer"><span class="author"></span><span class="title">Введение в многопоточное программирование</span><span class="number">96</span></div><br /><br /></div></div><script type="text/javascript">
        (function (d, w, c) {
            (w[c] = w[c] || []).push(function() {
                try {
                    w.yaCounter19426939 = new Ya.Metrika({
                        id:19426939,
                        clickmap:true,
                        trackLinks:true,
                        accurateTrackBounce:true,
                        webvisor:true
                    });
                } catch(e) { }
            });

            var n = d.getElementsByTagName("script")[0],
                s = d.createElement("script"),
                f = function () { n.parentNode.insertBefore(s, n); };
            s.type = "text/javascript";
            s.async = true;
            s.src = "https://mc.yandex.ru/metrika/watch.js";

            if (w.opera == "[object Opera]") {
                d.addEventListener("DOMContentLoaded", f, false);
            } else { f(); }
        })(document, window, "yandex_metrika_callbacks");
        </script><noscript><div><img src="./static/19426939" style="position:absolute; left:-9999px;" alt="" /></div></noscript><div class="toolbar hidden" tabindex="0"><div style="float: right; text-align: right"><span>слайд 22/96</span></div><div style="text-align: left"><span style="color: rgb(240, 240, 240);">* </span><a href="http://www.w3.org/Talks/Tools/Slidy2/help/help.html" title="Перемещайтесь кликая мышкой, используя клавишу пробел, стрелкивлево/вправо или Pg Up и Pg Dn. Клавиши S и B меняют размер шрифта.">помощь?</a> <a href="javascript:w3c_slidy.toggle_table_of_contents()" title="оглавление">содержание?</a> </div></div></body><span class="gr__tooltip"><span class="gr__tooltip-content" /><i class="gr__tooltip-logo" /><span class="gr__triangle" /></span></html>